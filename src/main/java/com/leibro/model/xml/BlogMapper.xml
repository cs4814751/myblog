<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leibro.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.leibro.model.Blog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_modify" jdbcType="TIMESTAMP" property="lastModify" />
    <result column="author" jdbcType="INTEGER" property="author" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.leibro.model.Blog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, read_count, create_time, last_modify, author, uri
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectAllOrderByCreateTimeDesc" resultMap="ResultMapWithBLOBs" >
    SELECT
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    FROM blogs
    ORDER BY create_time
    DESC
  </select>
  <select id="selectAllByKeyword" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    FROM blogs
    WHERE MATCH (title,content) AGAINST (#{keyword} IN NATURAL LANGUAGE MODE)
    ORDER BY create_time
    DESC
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blogs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUri" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blogs
    where uri = #{uri}
  </select>
  <select id="selectByYearAndMonthOrderByDay" resultMap="ResultMapWithBLOBs" >
    SELECT
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    FROM blogs
    WHERE
    MONTH (create_time) = #{month} AND
    YEAR (create_time) = #{year}
    ORDER BY
    DAY(create_time)
    DESC
  </select>
  <select id="selectAllByTag" resultType="com.leibro.model.Blog" >
    SELECT
    blogs.id,blogs.title,blogs.content,blogs.read_count,blogs.create_time,blogs.last_modify,blogs.author,blogs.uri
    FROM tags INNER JOIN blog_tag_link ON tags.id = blog_tag_link.tag_id
    INNER JOIN blogs ON blogs.id = blog_tag_link.blog_id
    WHERE tag = #{tag}
    ORDER BY blogs.create_time
    DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blogs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.leibro.model.Blog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blogs (title, read_count, create_time, 
      last_modify, author, uri, 
      content)
    values (#{title,jdbcType=VARCHAR}, #{readCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModify,jdbcType=TIMESTAMP}, #{author,jdbcType=INTEGER}, #{uri,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.leibro.model.Blog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blogs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModify != null">
        last_modify,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="uri != null">
        uri,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModify != null">
        #{lastModify,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null">
        #{author,jdbcType=INTEGER},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.leibro.model.Blog">
    update blogs
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModify != null">
        last_modify = #{lastModify,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=INTEGER},
      </if>
      <if test="uri != null">
        uri = #{uri,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.leibro.model.Blog">
    update blogs
    set title = #{title,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify = #{lastModify,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=INTEGER},
      uri = #{uri,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leibro.model.Blog">
    update blogs
    set title = #{title,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify = #{lastModify,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=INTEGER},
      uri = #{uri,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>